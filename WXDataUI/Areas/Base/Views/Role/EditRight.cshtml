
<form action="/" method="post">
    
    <div class="modal-dialog">
        <div class="modal-content">
            <input type="hidden" name="RoleId" id="RoleId" value="@ViewBag.RoleId" />
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">权限分配</h4>
            </div>
            <div class="modal-body">
                <div id="tree">

                </div>  
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                <button type="button" class="btn btn-primary" id="Save">保存</button>
            </div>

        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->

</form>



<script src="/Scripts/bootstrap-treeview.js"></script>
<script>


    $(function () {

        getTree();
        $("#Save").click(function () {
            var node = $("#tree").treeview('getSelected');
            var json = [];
            $.each(node, function (i, obj) {
                json[i] = {
                    'id' : obj.id
                };
            });
            console.info(node);
            $.post("/Base/Role/EditRight", "roleId=" + $("#RoleId").val()+ "&json="+JSON.stringify(json), function (result) {
                if (result) {
                    $("#EditFunction").modal('hide')
                } else {
                    alert('修改失败');
                }
            });
        });

    })
    function getTree() {
        $.post("/Base/Role/GetFunction", "RoleId=" + $("#RoleId").val(), function (result) {
            //console.info(result);

            $('#tree').treeview({
                data: result,
                multiSelect: true, //是否可以同时选择多个节点      Boolean
                onNodeSelected: function (event, data) {
                    if (data.hasOwnProperty("nodes")) {
                        CheckNode(data.nodes);
                    }
                },
                onNodeUnselected: function (event, data) {
                    if (data.hasOwnProperty("nodes")) {
                        UnCheckNode(data.nodes);
                    }
                }
            });
            
        });
    }
    function CheckNode(Node) {
        $.each(Node, function (i, obj) {
            var node = $('#tree').treeview('getNode', obj.nodeId);
            console.info(node);
            node.state.selected = true;
            if (obj.hasOwnProperty("nodes")) {
                CheckNode(obj.nodes);
            }
        });

    }

    function UnCheckNode(Node) {
        $.each(Node, function (i, obj) {
            var node = $('#tree').treeview('getNode', obj.nodeId);
            console.info(node);
            node.state.selected = false;
            if (obj.hasOwnProperty("nodes")) {
                UnCheckNode(obj.nodes);
            }
        });
    }


    function getTree1() {
        //节点上的数据遵循如下的格式：
        var tree = [{
            text: "Node 1", //节点显示的文本值  string
            icon: "glyphicon glyphicon-play-circle", //节点上显示的图标，支持bootstrap的图标  string
            selectedIcon: "glyphicon glyphicon-ok", //节点被选中时显示的图标       string
            color: "#ff0000", //节点的前景色      string
            backColor: "#1606ec", //节点的背景色      string
            href: "#http://www.baidu.com", //节点上的超链接
            selectable: true, //标记节点是否可以选择。false表示节点应该作为扩展标题，不会触发选择事件。  string
            state: { //描述节点的初始状态    Object
                checked: true, //是否选中节点
                /*disabled: true,*/ //是否禁用节点
                expanded: true, //是否展开节点
                selected: true //是否选中节点
            },
            tags: ['标签信息1', '标签信息2'], //向节点的右侧添加附加信息（类似与boostrap的徽章）    Array of Strings
            nodes: [{
                text: "Child 1",
                nodes: [{
                    text: "Grandchild 1"
                }, {
                    text: "Grandchild 2"
                }]
            }, {
                text: "Child 2"
            }]
        }, {
            text: "Parent 2",
            nodes: [{
                text: "Child 2",
                nodes: [{
                    text: "Grandchild 3"
                }, {
                    text: "Grandchild 4"
                }]
            }, {
                text: "Child 2"
            }]
        }, {
            text: "Parent 3"
        }, {
            text: "Parent 4"
        }, {
            text: "Parent 5",
            nodes: []
        }];

        return tree;
    }
</script>